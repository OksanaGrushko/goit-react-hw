{"version":3,"sources":["components/Layout/Layout.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["Layout","children","className","ContactForm","state","name","number","handlerInput","e","target","value","setState","handlerSubmit","contact","id","uuid","this","onSubmit","props","onChange","type","Component","ContactListItem","buttonClick","onClick","ContactList","filtredContacts","map","Filter","onInputChange","App","contacts","filter","nameValidator","obj","find","addContact","console","log","preventDefault","prevState","window","alert","contactDelete","newContact","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d6a0292.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Layout = ({ children }) => <div className=\"Layout\">{children}</div>;\nexport default Layout;\n\nLayout.propTypes = {\n  children: PropTypes.array,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport uuid from \"react-uuid\";\n\nexport default class ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handlerInput = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handlerSubmit = () => {\n    const { name, number } = this.state;\n    const contact = {\n      name: name,\n      id: uuid(),\n      number: number,\n    };\n    this.setState({ name: \"\", number: \"\" });\n\n    return contact;\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={(e) => this.props.handlerSubmit(e, this.handlerSubmit())}>\n        <p>Name</p>\n        <input value={name} name=\"name\" onChange={this.handlerInput} />\n        <p>Number</p>\n        <input value={number} name=\"number\" onChange={this.handlerInput} />\n        <button type=\"submit\">Add contacts</button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onHendlerSubmit: PropTypes.func,\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function ContactListItem({ name, number, id, buttonClick }) {\n  return (\n    <li>\n      <p>\n        {name} {number}\n        <button type=\"button\" onClick={() => buttonClick(id)}>\n          Delite\n        </button>\n      </p>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  buttonClick: PropTypes.func,\n};\n","import React from \"react\";\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\nimport PropTypes from \"prop-types\";\n\nexport default function ContactList({ filtredContacts, buttonClick }) {\n  return (\n    <ul>\n      {filtredContacts.map((contact) => {\n        return (\n          <ContactListItem\n            key={contact.id}\n            id={contact.id}\n            name={contact.name}\n            number={contact.number}\n            buttonClick={buttonClick}\n          ></ContactListItem>\n        );\n      })}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  filtredContacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  buttonClick: PropTypes.func,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Filter({ onInputChange, value }) {\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <input value={value} type=\"text\" name=\"filter\" onChange={onInputChange} />\n    </>\n  );\n}\nFilter.propTypes = {\n  onInputChange: PropTypes.func,\n  value: PropTypes.string,\n};\n","import React, { Component } from \"react\";\r\nimport Layout from \"./Layout/Layout\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport Filter from \"./Filter/Filter\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: \"\",\r\n  };\r\n\r\n  handlerInput = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  nameValidator = (obj) => {\r\n    const { contacts } = this.state;\r\n    return contacts.find(({ name }) => name === obj.name);\r\n  };\r\n  addContact = (e, obj) => {\r\n    console.log(e);\r\n    e.preventDefault();\r\n    this.setState((prevState) => {\r\n      return !this.nameValidator(obj)\r\n        ? {\r\n            contacts: [...prevState.contacts, obj],\r\n            filter: \"\",\r\n          }\r\n        : window.alert(`${obj.name} is already in contacts.`);\r\n    });\r\n  };\r\n\r\n  contactDelete = (id) => {\r\n    const { contacts } = this.state;\r\n    const newContact = contacts.filter((contact) => contact.id !== id);\r\n    this.setState({ contacts: newContact });\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const filtredContacts = contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter)\r\n    );\r\n    return (\r\n      <Layout>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm handlerSubmit={this.addContact} contacts={contacts} />\r\n\r\n        <h2>Contacts</h2>\r\n        {contacts.length > 1 && (\r\n          <Filter onInputChange={this.handlerInput} value={filter} />\r\n        )}\r\n        {contacts.length > 0 && (\r\n          <ContactList\r\n            filtredContacts={filtredContacts}\r\n            buttonClick={this.contactDelete}\r\n          />\r\n        )}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"./base.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}