{"version":3,"sources":["components/Layout/Layout.js","components/styles.js","components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["Layout","children","className","Button","styled","button","Title","div","h2","Paragraph","p","Section","title","Statistics","good","neutral","bad","total","positivePercentage","console","log","FeedbackOptions","options","onLeaveFeedback","type","onClick","Notification","message","App","state","hendleIncrement","statisticName","setState","prevState","countTotalFeedback","Object","values","reduce","acc","e","countPositiveFeedbackPercentage","Math","trunc","this","Component","ReactDOM","render","document","getElementById"],"mappings":"oNAGeA,EADA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,qBAAKC,UAAU,SAAf,SAAyBD,K,knBCD1D,IAAME,EAASC,IAAOC,OAAV,KAiBNC,GAJYF,IAAOG,IAAV,KAIDH,IAAOI,GAAV,MAILC,EAAYL,IAAOM,EAAV,KClBA,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOX,EAAY,EAAZA,SACvC,OACE,oCACE,cAACK,EAAD,UAAQM,IACPX,KCJQ,SAASY,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAGA,OADAC,QAAQC,IAAIN,EAAMC,EAASC,EAAKC,EAAOC,GAErC,qCACE,eAACT,EAAD,oBAAkBK,KAClB,eAACL,EAAD,uBAAqBM,KACrB,eAACN,EAAD,mBAAiBO,KACjB,eAACP,EAAD,qBAAmBQ,KACnB,eAACR,EAAD,iCAA+BS,EAA/B,UCdS,SAASG,EAAT,GAAuD,EAA5BC,QAA6B,IAApBC,EAAmB,EAAnBA,gBACjD,OACE,qCACE,cAACpB,EAAD,CAAQqB,KAAK,SAASC,QAAS,kBAAMF,EAAgB,SAArD,kBAGA,cAACpB,EAAD,CAAQqB,KAAK,SAASC,QAAS,kBAAMF,EAAgB,YAArD,qBAGA,cAACpB,EAAD,CAAQqB,KAAK,SAASC,QAAS,kBAAMF,EAAgB,QAArD,oBCVS,SAASG,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,I,ICGQC,E,4MACnBC,MAAQ,CACNf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPc,gBAAkB,SAACC,GACjB,EAAKC,UAAS,SAACC,GACb,OAAO,eACJF,EAAiBE,EAAUF,IAAkB,O,EAKpDG,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKP,OAAOQ,QAAO,SAACC,EAAKC,GAE5C,OADAD,GAAOC,IAEN,I,EAELC,gCAAkC,WAChC,OAA2B,IAApB,EAAKX,MAAMf,KACd2B,KAAKC,MAAO,EAAKb,MAAMf,KAAO,EAAKoB,qBAAwB,KAC3D,EAAKL,MAAMf,M,uDAGP,IAAD,EACwB6B,KAAKd,MAA5Bf,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQ0B,KAAKT,qBACbhB,EAAqByB,KAAKH,kCAChC,OACE,mCACE,eAAC,EAAD,WACE,cAAC7B,EAAD,CAASC,MAAM,wBAAf,SACE,cAACS,EAAD,CAAiBE,gBAAiBoB,KAAKb,oBAEzC,cAACnB,EAAD,CAASC,MAAM,aAAf,SACa,IAAVK,EACC,cAACJ,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAACQ,EAAD,CAAcC,QAAQ,iC,GA/CHiB,a,MCFjCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f1226d39.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Layout = ({ children }) => <div className=\"Layout\">{children}</div>;\nexport default Layout;\n","import styled from \"styled-components\";\nconst Button = styled.button`\n  margin: 5px;\n  padding: 3px 7px;\n  font-weight: 700;\n  outline: none;\n  border: 1px solid grey;\n  border-radius: 5px;\n  &:hover {\n    cursor: pointer;\n    background-color: rgba(170, 170, 170, 0.4);\n  }\n`;\n\nconst Container = styled.div`\n  /* display: flex; */\n`;\n\nconst Title = styled.h2`\n  margin: 20px 0;\n`;\n\nconst Paragraph = styled.p`\n  margin-bottom: 10px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport { Button, Container, Title, Paragraph };\n","import React from \"react\";\nimport { Title } from \"../styles\";\nimport PropTypes from \"prop-types\";\n\nexport default function Section({ title, children }) {\n  return (\n    <section>\n      <Title>{title}</Title>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.element,\n};\n","import React from \"react\";\nimport { Paragraph } from \"../styles\";\nimport PropTypes from \"prop-types\";\n\nexport default function Statistics({\n  good,\n  neutral,\n  bad,\n  total,\n  positivePercentage,\n}) {\n  console.log(good, neutral, bad, total, positivePercentage);\n  return (\n    <>\n      <Paragraph>Good: {good}</Paragraph>\n      <Paragraph>Neutral: {neutral}</Paragraph>\n      <Paragraph>Bad: {bad}</Paragraph>\n      <Paragraph>Total: {total}</Paragraph>\n      <Paragraph>Positive feedback: {positivePercentage}%</Paragraph>\n    </>\n  );\n}\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n","import React from \"react\";\nimport { Button } from \"../styles\";\nimport PropTypes from \"prop-types\";\n\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <>\n      <Button type=\"button\" onClick={() => onLeaveFeedback(\"good\")}>\n        Good\n      </Button>\n      <Button type=\"button\" onClick={() => onLeaveFeedback(\"neutral\")}>\n        Neutral\n      </Button>\n      <Button type=\"button\" onClick={() => onLeaveFeedback(\"bad\")}>\n        Bad\n      </Button>\n    </>\n  );\n}\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import React, { Component } from \"react\";\r\nimport Layout from \"./Layout/Layout\";\r\nimport Section from \"./Section/Section\";\r\nimport Statistics from \"./Statistics/Statistics\";\r\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\r\nimport Notification from \"./Notification/Notification\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  hendleIncrement = (statisticName) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        [statisticName]: (prevState[statisticName] += 1),\r\n      };\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return Object.values(this.state).reduce((acc, e) => {\r\n      acc += e;\r\n      return acc;\r\n    }, 0);\r\n  };\r\n  countPositiveFeedbackPercentage = () => {\r\n    return this.state.good !== 0\r\n      ? Math.trunc((this.state.good / this.countTotalFeedback()) * 100)\r\n      : this.state.good;\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const positivePercentage = this.countPositiveFeedbackPercentage();\r\n    return (\r\n      <>\r\n        <Layout>\r\n          <Section title=\"Please leave feedback\">\r\n            <FeedbackOptions onLeaveFeedback={this.hendleIncrement} />\r\n          </Section>\r\n          <Section title=\"Statistics\">\r\n            {total !== 0 ? (\r\n              <Statistics\r\n                good={good}\r\n                neutral={neutral}\r\n                bad={bad}\r\n                total={total}\r\n                positivePercentage={positivePercentage}\r\n              />\r\n            ) : (\r\n              <Notification message=\"No feedback given\" />\r\n            )}\r\n          </Section>\r\n        </Layout>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"./base.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}