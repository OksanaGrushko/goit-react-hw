{"version":3,"sources":["views/HomePage.js","services/filmsAppi.js","views/FilmList.js"],"names":["HomePage","state","shows","filmsAppi","fetchShowWithTrending","then","setState","this","length","location","props","Component","baseURL","apiKey","fetchShowWithSearch","query","fetch","response","json","data","results","fetchShowWithMovies","id","fetchShowWithActors","cast","fetchShowWithRevievs","FilmList","map","show","key","to","pathname","from","title","name"],"mappings":"4OAIqBA,E,4MACjBC,MAAQ,CACJC,MAAO,I,kEAGU,IAAD,OAChBC,IACKC,wBACAC,MAAK,SAAAH,GAAK,OAAI,EAAKI,SAAS,CAAEJ,e,+BAE7B,IACEA,EAAUK,KAAKN,MAAfC,MAER,OACI,6BACI,8CACCA,EAAMM,OAAS,GACZ,kBAAC,IAAD,CAAUN,MAAOA,EAAOO,SAAUF,KAAKG,MAAMD,gB,GAjB3BE,c,gCCJvB,KACXC,QAAS,+BACTC,OAAQ,mCAERC,oBAJW,WAIsB,IAAbC,EAAY,uDAAJ,GACxB,OAAOC,MAAM,GAAD,OACLT,KAAKK,QADA,iCACgCL,KAAKM,OADrC,kBACqDE,IAE5DV,MAAK,SAAAY,GAAQ,OAAIA,EAASC,UAC1Bb,MAAK,SAAAc,GAAI,OAAIA,EAAKC,YAG3BhB,sBAZW,WAaP,OAAOY,MAAM,GAAD,OAAIT,KAAKK,QAAT,qCAA6CL,KAAKM,SACzDR,MAAK,SAAAY,GAAQ,OAAIA,EAASC,UAC1Bb,MAAK,SAAAc,GAAI,OAAIA,EAAKC,YAG3BC,oBAlBW,SAkBSC,GAChB,OAAON,MAAM,GAAD,OAAIT,KAAKK,QAAT,kBAA0BU,EAA1B,oBAAwCf,KAAKM,SACpDR,MAAK,SAAAY,GAAQ,OAAIA,EAASC,UAC1Bb,MAAK,SAAAc,GAAI,OAAIA,MAGtBI,oBAxBW,SAwBSD,GAChB,OAAON,MAAM,GAAD,OACLT,KAAKK,QADA,kBACiBU,EADjB,4BACuCf,KAAKM,SAEnDR,MAAK,SAAAY,GAAQ,OAAIA,EAASC,UAC1Bb,MAAK,SAAAc,GAAI,OAAIA,EAAKK,SAG3BC,qBAhCW,SAgCUH,GACjB,OAAON,MAAM,GAAD,OACLT,KAAKK,QADA,kBACiBU,EADjB,4BACuCf,KAAKM,SAEnDR,MAAK,SAAAY,GAAQ,OAAIA,EAASC,UAC1Bb,MAAK,SAAAc,GAAI,OAAIA,EAAKC,c,gCCrC/B,2BAqBeM,IAlBE,SAAC,GAAD,IAAGxB,EAAH,EAAGA,MAAOO,EAAV,EAAUA,SAAV,OACb,4BACKP,GACGA,EAAMyB,KAAI,SAAAC,GAAI,OACV,wBAAIC,IAAKD,EAAKN,IACV,kBAAC,IAAD,CACIQ,GAAI,CACAC,SAAS,WAAD,OAAaH,EAAKN,IAC1BrB,MAAO,CAAE+B,KAAMvB,KAGlBmB,EAAKK,MAAQL,EAAKK,MAAQL,EAAKM","file":"static/js/home-page-view.f4469c95.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport FilmList from './FilmList';\nimport filmsAppi from '../services/filmsAppi';\n\nexport default class HomePage extends Component {\n    state = {\n        shows: [],\n    };\n\n    componentDidMount() {\n        filmsAppi\n            .fetchShowWithTrending()\n            .then(shows => this.setState({ shows }));\n    }\n    render() {\n        const { shows } = this.state;\n\n        return (\n            <div>\n                <h2>Trending today</h2>\n                {shows.length > 0 && (\n                    <FilmList shows={shows} location={this.props.location} />\n                )}\n            </div>\n        );\n    }\n}\n","export default {\n    baseURL: 'https://api.themoviedb.org/3',\n    apiKey: '71607c3510b1a3ebfcb0586b3d831a6c',\n\n    fetchShowWithSearch(query = '') {\n        return fetch(\n            `${this.baseURL}/search/movie?api_key=${this.apiKey}&query=${query}`,\n        )\n            .then(response => response.json())\n            .then(data => data.results);\n    },\n\n    fetchShowWithTrending() {\n        return fetch(`${this.baseURL}/trending/all/day?api_key=${this.apiKey}`)\n            .then(response => response.json())\n            .then(data => data.results);\n    },\n\n    fetchShowWithMovies(id) {\n        return fetch(`${this.baseURL}/movie/${id}?api_key=${this.apiKey}`)\n            .then(response => response.json())\n            .then(data => data);\n    },\n\n    fetchShowWithActors(id) {\n        return fetch(\n            `${this.baseURL}/movie/${id}/credits?api_key=${this.apiKey}`,\n        )\n            .then(response => response.json())\n            .then(data => data.cast);\n    },\n\n    fetchShowWithRevievs(id) {\n        return fetch(\n            `${this.baseURL}/movie/${id}/reviews?api_key=${this.apiKey}`,\n        )\n            .then(response => response.json())\n            .then(data => data.results);\n    },\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst FilmList = ({ shows, location }) => (\n    <ul>\n        {shows &&\n            shows.map(show => (\n                <li key={show.id}>\n                    <Link\n                        to={{\n                            pathname: `/movies/${show.id}`,\n                            state: { from: location },\n                        }}\n                    >\n                        {show.title ? show.title : show.name}\n                    </Link>\n                </li>\n            ))}\n    </ul>\n);\n\nexport default FilmList;\n"],"sourceRoot":""}