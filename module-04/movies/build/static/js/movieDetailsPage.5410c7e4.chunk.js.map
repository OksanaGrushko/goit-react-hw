{"version":3,"sources":["views/MovieDetailsPage.js","services/filmsAppi.js"],"names":["MoviesDetailsPage","state","show","handleGoBack","props","location","from","history","push","routes","moviesPage","filmsAppi","fetchShowWithMovies","this","match","params","movieId","then","setState","type","onClick","title","name","src","poster_path","alt","tags","width","vote_average","overview","genres","map","gen","key","id","to","pathname","url","showId","route","label","path","exact","Component","baseURL","apiKey","fetchShowWithSearch","query","fetch","response","json","data","results","fetchShowWithTrending","fetchShowWithActors","cast","fetchShowWithRevievs"],"mappings":"0PAKqBA,E,4MACjBC,MAAQ,CAAEC,KAAM,M,EAQhBC,aAAe,WAAO,IACVF,EAAU,EAAKG,MAAMC,SAArBJ,MACR,GAAIA,GAASA,EAAMK,KACf,OAAO,EAAKF,MAAMG,QAAQC,KAAKP,EAAMK,MAGzC,EAAKF,MAAMG,QAAQC,KAAKC,IAAOC,a,kEAZd,IAAD,OAChBC,IACKC,oBAAoBC,KAAKT,MAAMU,MAAMC,OAAOC,SAC5CC,MAAK,SAAAf,GAAI,OAAI,EAAKgB,SAAS,CAAEhB,c,+BAY5B,IACEA,EAASW,KAAKZ,MAAdC,KACAY,EAAUD,KAAKT,MAAfU,MAER,OACI,6BACKZ,GACG,oCACI,4BAAQiB,KAAK,SAASC,QAASP,KAAKV,cAApC,iBAGA,6BACA,4BAAKD,EAAKmB,MAAQnB,EAAKmB,MAAQnB,EAAKoB,MACpC,yBACIC,IACIrB,EAAKsB,YAAL,0CACyCtB,EAAKsB,aAD9C,YAIJC,IAAKvB,EAAKwB,KACVC,MAAM,UAEV,0CAAoC,GAApBzB,EAAK0B,aAArB,KACA,wCACA,2BAAI1B,EAAK2B,UACT,sCACA,4BACK3B,EAAK4B,QACF5B,EAAK4B,OAAOC,KAAI,SAAAC,GAAG,OACf,wBAAIC,IAAKD,EAAIE,IAAKF,EAAIV,UAGlC,6BACA,qDACA,4BACI,4BACI,kBAAC,IAAD,CACIa,GAAI,CACAC,SAAS,GAAD,OAAKtB,EAAMuB,IAAX,SACRpC,MAAO,CAAEqC,OAAQpC,EAAKgC,MAH9B,SASJ,4BACI,kBAAC,IAAD,CACIC,GAAI,CACAC,SAAS,GAAD,OAAKtB,EAAMuB,IAAX,YACRpC,MAAO,CAAEqC,OAAQpC,EAAKgC,MAH9B,aAUR,6BACCzB,IAAOsB,KAAI,SAAAQ,GACR,OACoB,YAAhBA,EAAMC,OACU,SAAhBD,EAAMC,QAGF,kBAAC,IAAD,eACIP,IAAKM,EAAME,KACXC,MAAOH,EAAMG,OACTH,a,GApFGI,c,gCCLhC,KACXC,QAAS,+BACTC,OAAQ,mCAERC,oBAJW,WAIsB,IAAbC,EAAY,uDAAJ,GACxB,OAAOC,MAAM,GAAD,OACLnC,KAAK+B,QADA,iCACgC/B,KAAKgC,OADrC,kBACqDE,IAE5D9B,MAAK,SAAAgC,GAAQ,OAAIA,EAASC,UAC1BjC,MAAK,SAAAkC,GAAI,OAAIA,EAAKC,YAG3BC,sBAZW,WAaP,OAAOL,MAAM,GAAD,OAAInC,KAAK+B,QAAT,qCAA6C/B,KAAKgC,SACzD5B,MAAK,SAAAgC,GAAQ,OAAIA,EAASC,UAC1BjC,MAAK,SAAAkC,GAAI,OAAIA,EAAKC,YAG3BxC,oBAlBW,SAkBSsB,GAChB,OAAOc,MAAM,GAAD,OAAInC,KAAK+B,QAAT,kBAA0BV,EAA1B,oBAAwCrB,KAAKgC,SACpD5B,MAAK,SAAAgC,GAAQ,OAAIA,EAASC,UAC1BjC,MAAK,SAAAkC,GAAI,OAAIA,MAGtBG,oBAxBW,SAwBSpB,GAChB,OAAOc,MAAM,GAAD,OACLnC,KAAK+B,QADA,kBACiBV,EADjB,4BACuCrB,KAAKgC,SAEnD5B,MAAK,SAAAgC,GAAQ,OAAIA,EAASC,UAC1BjC,MAAK,SAAAkC,GAAI,OAAIA,EAAKI,SAG3BC,qBAhCW,SAgCUtB,GACjB,OAAOc,MAAM,GAAD,OACLnC,KAAK+B,QADA,kBACiBV,EADjB,4BACuCrB,KAAKgC,SAEnD5B,MAAK,SAAAgC,GAAQ,OAAIA,EAASC,UAC1BjC,MAAK,SAAAkC,GAAI,OAAIA,EAAKC","file":"static/js/movieDetailsPage.5410c7e4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport filmsAppi from '../services/filmsAppi';\nimport routes from '../routes';\n\nexport default class MoviesDetailsPage extends Component {\n    state = { show: null };\n\n    componentDidMount() {\n        filmsAppi\n            .fetchShowWithMovies(this.props.match.params.movieId)\n            .then(show => this.setState({ show }));\n    }\n\n    handleGoBack = () => {\n        const { state } = this.props.location;\n        if (state && state.from) {\n            return this.props.history.push(state.from);\n        }\n\n        this.props.history.push(routes.moviesPage);\n    };\n\n    render() {\n        const { show } = this.state;\n        const { match } = this.props;\n\n        return (\n            <div>\n                {show && (\n                    <>\n                        <button type=\"button\" onClick={this.handleGoBack}>\n                            Back to Shows\n                        </button>\n                        <br />\n                        <h1>{show.title ? show.title : show.name}</h1>\n                        <img\n                            src={\n                                show.poster_path\n                                    ? `https://image.tmdb.org/t/p/w500/${show.poster_path}`\n                                    : `non photo`\n                            }\n                            alt={show.tags}\n                            width=\"200px\"\n                        />\n                        <p>User Score: {show.vote_average * 10}%</p>\n                        <h3>Overview</h3>\n                        <p>{show.overview}</p>\n                        <h4>Genres</h4>\n                        <ul>\n                            {show.genres &&\n                                show.genres.map(gen => (\n                                    <li key={gen.id}>{gen.name}</li>\n                                ))}\n                        </ul>\n                        <hr />\n                        <p>Additional information</p>\n                        <ul>\n                            <li>\n                                <Link\n                                    to={{\n                                        pathname: `${match.url}/cast`,\n                                        state: { showId: show.id },\n                                    }}\n                                >\n                                    Cast\n                                </Link>\n                            </li>\n                            <li>\n                                <Link\n                                    to={{\n                                        pathname: `${match.url}/revievs`,\n                                        state: { showId: show.id },\n                                    }}\n                                >\n                                    Revievs\n                                </Link>\n                            </li>\n                        </ul>\n                        <hr />\n                        {routes.map(route => {\n                            if (\n                                route.label === 'Revievs' ||\n                                route.label === 'Cast'\n                            ) {\n                                return (\n                                    <Route\n                                        key={route.path}\n                                        exact={route.exact}\n                                        {...route}\n                                    />\n                                );\n                            }\n                            return false;\n                        })}\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n","export default {\n    baseURL: 'https://api.themoviedb.org/3',\n    apiKey: '71607c3510b1a3ebfcb0586b3d831a6c',\n\n    fetchShowWithSearch(query = '') {\n        return fetch(\n            `${this.baseURL}/search/movie?api_key=${this.apiKey}&query=${query}`,\n        )\n            .then(response => response.json())\n            .then(data => data.results);\n    },\n\n    fetchShowWithTrending() {\n        return fetch(`${this.baseURL}/trending/all/day?api_key=${this.apiKey}`)\n            .then(response => response.json())\n            .then(data => data.results);\n    },\n\n    fetchShowWithMovies(id) {\n        return fetch(`${this.baseURL}/movie/${id}?api_key=${this.apiKey}`)\n            .then(response => response.json())\n            .then(data => data);\n    },\n\n    fetchShowWithActors(id) {\n        return fetch(\n            `${this.baseURL}/movie/${id}/credits?api_key=${this.apiKey}`,\n        )\n            .then(response => response.json())\n            .then(data => data.cast);\n    },\n\n    fetchShowWithRevievs(id) {\n        return fetch(\n            `${this.baseURL}/movie/${id}/reviews?api_key=${this.apiKey}`,\n        )\n            .then(response => response.json())\n            .then(data => data.results);\n    },\n};\n"],"sourceRoot":""}