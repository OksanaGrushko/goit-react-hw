{"version":3,"sources":["views/Cast.js","services/filmsAppi.js"],"names":["Cast","state","actors","filmsAppi","fetchShowWithActors","this","props","match","params","movieId","then","setState","map","actor","profile_path","key","id","src","alt","original_name","width","name","character","Component","baseURL","apiKey","fetchShowWithSearch","query","fetch","response","json","data","results","fetchShowWithTrending","fetchShowWithMovies","cast","fetchShowWithRevievs"],"mappings":"oOAGqBA,E,4MACjBC,MAAQ,CACJC,OAAQ,I,kEAGS,IAAD,OAChBC,IACKC,oBAAoBC,KAAKC,MAAMC,MAAMC,OAAOC,SAC5CC,MAAK,SAAAR,GAAM,OAAI,EAAKS,SAAS,CAAET,gB,+BAG9B,IACEA,EAAWG,KAAKJ,MAAhBC,OAER,OAAOA,EACH,4BACKA,EAAOU,KACJ,SAAAC,GAAK,OACsB,OAAvBA,EAAMC,cACF,wBAAIC,IAAKF,EAAMG,IACX,yBACIC,IAAG,0CAAqCJ,EAAMC,cAC9CI,IAAKL,EAAMM,cACXC,MAAM,SAEV,2BAAIP,EAAMQ,MACV,yCAAeR,EAAMS,gBAMzC,2E,GAhCsBC,c,gCCHnB,KACXC,QAAS,+BACTC,OAAQ,mCAERC,oBAJW,WAIsB,IAAbC,EAAY,uDAAJ,GACxB,OAAOC,MAAM,GAAD,OACLvB,KAAKmB,QADA,iCACgCnB,KAAKoB,OADrC,kBACqDE,IAE5DjB,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,UAC1BpB,MAAK,SAAAqB,GAAI,OAAIA,EAAKC,YAG3BC,sBAZW,WAaP,OAAOL,MAAM,GAAD,OAAIvB,KAAKmB,QAAT,qCAA6CnB,KAAKoB,SACzDf,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,UAC1BpB,MAAK,SAAAqB,GAAI,OAAIA,EAAKC,YAG3BE,oBAlBW,SAkBSlB,GAChB,OAAOY,MAAM,GAAD,OAAIvB,KAAKmB,QAAT,kBAA0BR,EAA1B,oBAAwCX,KAAKoB,SACpDf,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,UAC1BpB,MAAK,SAAAqB,GAAI,OAAIA,MAGtB3B,oBAxBW,SAwBSY,GAChB,OAAOY,MAAM,GAAD,OACLvB,KAAKmB,QADA,kBACiBR,EADjB,4BACuCX,KAAKoB,SAEnDf,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,UAC1BpB,MAAK,SAAAqB,GAAI,OAAIA,EAAKI,SAG3BC,qBAhCW,SAgCUpB,GACjB,OAAOY,MAAM,GAAD,OACLvB,KAAKmB,QADA,kBACiBR,EADjB,4BACuCX,KAAKoB,SAEnDf,MAAK,SAAAmB,GAAQ,OAAIA,EAASC,UAC1BpB,MAAK,SAAAqB,GAAI,OAAIA,EAAKC","file":"static/js/cast.3b77e0b4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport filmsAppi from '../services/filmsAppi';\n\nexport default class Cast extends Component {\n    state = {\n        actors: [],\n    };\n\n    componentDidMount() {\n        filmsAppi\n            .fetchShowWithActors(this.props.match.params.movieId)\n            .then(actors => this.setState({ actors }));\n    }\n\n    render() {\n        const { actors } = this.state;\n\n        return actors ? (\n            <ul>\n                {actors.map(\n                    actor =>\n                        actor.profile_path !== null && (\n                            <li key={actor.id}>\n                                <img\n                                    src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}\n                                    alt={actor.original_name}\n                                    width=\"80px\"\n                                />\n                                <p>{actor.name}</p>\n                                <p>Character: {actor.character}</p>\n                            </li>\n                        ),\n                )}\n            </ul>\n        ) : (\n            <p>We don't have any actors for this movie.</p>\n        );\n    }\n}\n","export default {\n    baseURL: 'https://api.themoviedb.org/3',\n    apiKey: '71607c3510b1a3ebfcb0586b3d831a6c',\n\n    fetchShowWithSearch(query = '') {\n        return fetch(\n            `${this.baseURL}/search/movie?api_key=${this.apiKey}&query=${query}`,\n        )\n            .then(response => response.json())\n            .then(data => data.results);\n    },\n\n    fetchShowWithTrending() {\n        return fetch(`${this.baseURL}/trending/all/day?api_key=${this.apiKey}`)\n            .then(response => response.json())\n            .then(data => data.results);\n    },\n\n    fetchShowWithMovies(id) {\n        return fetch(`${this.baseURL}/movie/${id}?api_key=${this.apiKey}`)\n            .then(response => response.json())\n            .then(data => data);\n    },\n\n    fetchShowWithActors(id) {\n        return fetch(\n            `${this.baseURL}/movie/${id}/credits?api_key=${this.apiKey}`,\n        )\n            .then(response => response.json())\n            .then(data => data.cast);\n    },\n\n    fetchShowWithRevievs(id) {\n        return fetch(\n            `${this.baseURL}/movie/${id}/reviews?api_key=${this.apiKey}`,\n        )\n            .then(response => response.json())\n            .then(data => data.results);\n    },\n};\n"],"sourceRoot":""}