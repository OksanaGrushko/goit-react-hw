{"version":3,"sources":["views/Revievs.js","services/filmsAppi.js"],"names":["Revievs","state","revievs","filmsAppi","fetchShowWithRevievs","this","props","match","params","movieId","then","setState","console","log","map","info","key","id","author","content","Component","baseURL","apiKey","fetchShowWithSearch","query","fetch","response","json","data","results","fetchShowWithTrending","fetchShowWithMovies","fetchShowWithActors","cast"],"mappings":"oOAGqBA,E,4MACjBC,MAAQ,CACJC,QAAS,I,kEAGQ,IAAD,OAChBC,IACKC,qBAAqBC,KAAKC,MAAMC,MAAMC,OAAOC,SAC7CC,MAAK,SAAAR,GAAO,OAAI,EAAKS,SAAS,CAAET,iB,+BAG/B,IACEA,EAAYG,KAAKJ,MAAjBC,QAGR,OAFAU,QAAQC,IAAI,UAAW,CAAEX,YAElBA,EACH,4BACKA,EAAQY,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,EAAKE,IACV,uCAAaF,EAAKG,QAClB,2BAAIH,EAAKI,cAKrB,4E,GAzByBC,c,gCCHtB,KACXC,QAAS,+BACTC,OAAQ,mCAERC,oBAJW,WAIsB,IAAbC,EAAY,uDAAJ,GACxB,OAAOC,MAAM,GAAD,OACLpB,KAAKgB,QADA,iCACgChB,KAAKiB,OADrC,kBACqDE,IAE5Dd,MAAK,SAAAgB,GAAQ,OAAIA,EAASC,UAC1BjB,MAAK,SAAAkB,GAAI,OAAIA,EAAKC,YAG3BC,sBAZW,WAaP,OAAOL,MAAM,GAAD,OAAIpB,KAAKgB,QAAT,qCAA6ChB,KAAKiB,SACzDZ,MAAK,SAAAgB,GAAQ,OAAIA,EAASC,UAC1BjB,MAAK,SAAAkB,GAAI,OAAIA,EAAKC,YAG3BE,oBAlBW,SAkBSd,GAChB,OAAOQ,MAAM,GAAD,OAAIpB,KAAKgB,QAAT,kBAA0BJ,EAA1B,oBAAwCZ,KAAKiB,SACpDZ,MAAK,SAAAgB,GAAQ,OAAIA,EAASC,UAC1BjB,MAAK,SAAAkB,GAAI,OAAIA,MAGtBI,oBAxBW,SAwBSf,GAChB,OAAOQ,MAAM,GAAD,OACLpB,KAAKgB,QADA,kBACiBJ,EADjB,4BACuCZ,KAAKiB,SAEnDZ,MAAK,SAAAgB,GAAQ,OAAIA,EAASC,UAC1BjB,MAAK,SAAAkB,GAAI,OAAIA,EAAKK,SAG3B7B,qBAhCW,SAgCUa,GACjB,OAAOQ,MAAM,GAAD,OACLpB,KAAKgB,QADA,kBACiBJ,EADjB,4BACuCZ,KAAKiB,SAEnDZ,MAAK,SAAAgB,GAAQ,OAAIA,EAASC,UAC1BjB,MAAK,SAAAkB,GAAI,OAAIA,EAAKC","file":"static/js/revievs.53a26e71.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport filmsAppi from '../services/filmsAppi';\n\nexport default class Revievs extends Component {\n    state = {\n        revievs: [],\n    };\n\n    componentDidMount() {\n        filmsAppi\n            .fetchShowWithRevievs(this.props.match.params.movieId)\n            .then(revievs => this.setState({ revievs }));\n    }\n\n    render() {\n        const { revievs } = this.state;\n        console.log('revievs', { revievs });\n\n        return revievs ? (\n            <ul>\n                {revievs.map(info => (\n                    <li key={info.id}>\n                        <h5>Author: {info.author}</h5>\n                        <p>{info.content}</p>\n                    </li>\n                ))}\n            </ul>\n        ) : (\n            <p>We don't have any reviews for this movie.</p>\n        );\n    }\n}\n","export default {\n    baseURL: 'https://api.themoviedb.org/3',\n    apiKey: '71607c3510b1a3ebfcb0586b3d831a6c',\n\n    fetchShowWithSearch(query = '') {\n        return fetch(\n            `${this.baseURL}/search/movie?api_key=${this.apiKey}&query=${query}`,\n        )\n            .then(response => response.json())\n            .then(data => data.results);\n    },\n\n    fetchShowWithTrending() {\n        return fetch(`${this.baseURL}/trending/all/day?api_key=${this.apiKey}`)\n            .then(response => response.json())\n            .then(data => data.results);\n    },\n\n    fetchShowWithMovies(id) {\n        return fetch(`${this.baseURL}/movie/${id}?api_key=${this.apiKey}`)\n            .then(response => response.json())\n            .then(data => data);\n    },\n\n    fetchShowWithActors(id) {\n        return fetch(\n            `${this.baseURL}/movie/${id}/credits?api_key=${this.apiKey}`,\n        )\n            .then(response => response.json())\n            .then(data => data.cast);\n    },\n\n    fetchShowWithRevievs(id) {\n        return fetch(\n            `${this.baseURL}/movie/${id}/reviews?api_key=${this.apiKey}`,\n        )\n            .then(response => response.json())\n            .then(data => data.results);\n    },\n};\n"],"sourceRoot":""}